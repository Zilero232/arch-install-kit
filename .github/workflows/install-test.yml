  # Workflow name displayed in GitHub Actions
  name: Installation Test

  # Workflow triggers
  on:
    # Trigger on push to master branch
    push:
      branches: [master]

    # Trigger on PR to master
    pull_request:
      branches: [master]
      # PR event types that trigger the workflow
      types: [opened, synchronize, reopened]

    # Weekly scheduled run
    schedule:
      - cron: '0 0 * * 0' # Every Sunday at 00:00 UTC

  # Define jobs to be executed
  jobs:
    test-installation:
      runs-on: ubuntu-latest # OS to run on
      container:
        image: archlinux:base-devel # Arch Linux container
        
      timeout-minutes: 30 # Maximum execution time

      # Execution steps
      steps:
        # Clone repository
        - uses: actions/checkout@v3
        
        # Create test user and switch to it
        - name: Create test user
          run: |
            # Create test user with sudo privileges
            useradd -m -G wheel testuser
            echo "testuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
                
            # Set ownership of repository to testuser
            WORKSPACE_DIR=$(pwd)
            chown -R testuser:testuser "$WORKSPACE_DIR"

        # Install Python and pip
        - name: Install Python
          run: |
            # Update system
            pacman -Syu --noconfirm

            # Install Python and pip
            pacman -S --noconfirm python python-pip python-pyyaml


        # Test full installation (all options = y)
        - name: Test installation with all options
          id: full_install # ID for notification
          run: | 
            WORKSPACE_DIR=$(pwd)
            sudo -u testuser bash -c "cd '$WORKSPACE_DIR' && CI_MODE=true CI_INSTALL_ALL=true CI_DRIVER=nvidia python install/index.py"

        # Test minimal installation (all options = n)
        - name: Test installation with minimal options
          id: min_install # ID for notification
          run: |
            WORKSPACE_DIR=$(pwd)
            sudo -u testuser bash -c "cd '$WORKSPACE_DIR' && CI_MODE=true CI_INSTALL_ALL=false CI_DRIVER=none python install/index.py"

        # Send Telegram notification
        - name: Send Telegram notification
          if: always() # Run even if previous steps failed
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_CHAT_ID }} # Chat ID from secrets
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }} # Bot token from secrets
            format: html # Message format
            message: |
              <b>Installation Arch Linux Script</b>

              <b>Event:</b> ${{ github.event_name }}
              <b>Branch:</b> ${{ github.ref }}
              <b>Commit:</b> ${{ github.sha }}

              <b>Full Installation:</b> ${{ steps.full_install.outcome }}
              <b>Minimal Installation:</b> ${{ steps.min_install.outcome }}

              <b>Status:</b> ${{ job.status }}

              <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Details</a>
